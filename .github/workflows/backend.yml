name: Build & Deploy Backend

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**' ]

env:
  IMAGE_NAME: ghcr.io/mrigankkh/good-first-issue/fastapi


jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    # Declare job outputs
    outputs:
      image: ${{ steps.publish-image.outputs.image }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & push Docker image
        id: publish-image
        run: |
          IMAGE=${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker build -t $IMAGE ./backend
          docker push $IMAGE
          # publish the image name as a step output
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      # - name: Clean up old GHCR versions
      #   uses: actions/delete-package-versions@v5
      #   with:
      #     # The name of your GHCR package (check Packages → fastapi in your repo)
      #     package-name: fastapi
      #     # Since you’re using Docker/OCI images
      #     package-type: container
      #     # Keep only the 5 newest versions
      #     min-versions-to-keep: 2
      #     # Use your GHCR PAT so it can delete old tags
      #     token: ${{ secrets.GHCR_TOKEN }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run tests
        run: |
          cd backend
          
  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 1) Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 2) Update your FastAPI app to the new image
      - name: Update FastAPI Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
              --name fgi-fastapi-server \
              --resource-group gfi-server \
              --image ${{ needs.build.outputs.image }}

      - name: Update Scheduled Job
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp job update \
              --name db-refresh \
              --resource-group gfi-server \
              --image ${{ needs.build.outputs.image }}
